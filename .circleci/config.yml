version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx4G
    branches:
      ignore:
        - gsh_live
        - gsh_develop
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run UnitTest
          command: ./gradlew testDebugUnitTest --no-daemon -Pkotlin.incremental=false --max-workers=2 # --info --stacktrace
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel auto -verbose
          background: true
      - run:
          name: Wait emulator
          command: |
            # wait for it to have booted
            circle-android wait-for-boot
            # unlock the emulator screen
            sleep 30
            adb shell input keyevent 82
      - run:
          name: Run EspressoTests
          command: ./gradlew connectedDebugAndroidTest --no-daemon -PdisablePreDex # --info --stacktrace
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
          destination: test-results/
     # - run:
          #name: Initial build
          #command: ./gradlew clean --no-daemon --stacktrace
      #- store_artifacts:
          #path: app/build/outputs/apk/
          #destination: apks/
     # - deploy:
          #name: "Deploy to Fabric "
          #command: #./gradlew assembleDebug crashlyticsUploadDistributionDebug --stacktrace --debug --no-daemon
                    #../gradlew assembleRelease crashlyticsUploadDistributionRelease --stacktrace --debug --no-daemon

